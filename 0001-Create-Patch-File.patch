From 1beab0c2f78cf2a79037c8ba6e9d494bdbd8f886 Mon Sep 17 00:00:00 2001
From: Tanay Srivastava <tanaysriofficial@gmail.com>
Date: Wed, 13 May 2020 20:53:38 +0530
Subject: [PATCH] Create Patch File

---
 .idea/.gitignore                               |   3 +++
 .idea/JPMC-tech-task-1-py3.iml                 |  12 ++++++++++++
 .idea/inspectionProfiles/profiles_settings.xml |   6 ++++++
 .idea/misc.xml                                 |   4 ++++
 .idea/modules.xml                              |   8 ++++++++
 .idea/vcs.xml                                  |   6 ++++++
 __pycache__/client3.cpython-37.pyc             | Bin 0 -> 1115 bytes
 client3.py                                     |  12 ++++++++----
 client_test.py                                 |  16 +++++++++++++++-
 9 files changed, 62 insertions(+), 5 deletions(-)
 create mode 100644 .idea/.gitignore
 create mode 100644 .idea/JPMC-tech-task-1-py3.iml
 create mode 100644 .idea/inspectionProfiles/profiles_settings.xml
 create mode 100644 .idea/misc.xml
 create mode 100644 .idea/modules.xml
 create mode 100644 .idea/vcs.xml
 create mode 100644 __pycache__/client3.cpython-37.pyc

diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
index 0000000..26d3352
--- /dev/null
+++ b/.idea/.gitignore
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
diff --git a/.idea/JPMC-tech-task-1-py3.iml b/.idea/JPMC-tech-task-1-py3.iml
new file mode 100644
index 0000000..8b8c395
--- /dev/null
+++ b/.idea/JPMC-tech-task-1-py3.iml
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="PYTHON_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+  <component name="PyDocumentationSettings">
+    <option name="format" value="PLAIN" />
+    <option name="myDocStringFormat" value="Plain" />
+  </component>
+</module>
\ No newline at end of file
diff --git a/.idea/inspectionProfiles/profiles_settings.xml b/.idea/inspectionProfiles/profiles_settings.xml
new file mode 100644
index 0000000..105ce2d
--- /dev/null
+++ b/.idea/inspectionProfiles/profiles_settings.xml
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <settings>
+    <option name="USE_PROJECT_PROFILE" value="false" />
+    <version value="1.0" />
+  </settings>
+</component>
\ No newline at end of file
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
index 0000000..65531ca
--- /dev/null
+++ b/.idea/misc.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.6" project-jdk-type="Python SDK" />
+</project>
\ No newline at end of file
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
index 0000000..c2eb5cf
--- /dev/null
+++ b/.idea/modules.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/JPMC-tech-task-1-py3.iml" filepath="$PROJECT_DIR$/.idea/JPMC-tech-task-1-py3.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
index 0000000..94a25f7
--- /dev/null
+++ b/.idea/vcs.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/__pycache__/client3.cpython-37.pyc b/__pycache__/client3.cpython-37.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..5471e062ea18bcde347edf0d900f5070fb6096ed
GIT binary patch
literal 1115
zcmYjQPjA~c6elH0mK{55lje`t3pb!xJuFp*UV@<Qx+d*_0SnR&Los5Vz?jdm5?OL6
zx@}zL<Q?}RoZ~*jF8c&K?8xg*z3;Tsp6H|)h4+tqe*E$Go}Y9&ErRRjAHV;cH3|8<
z4z3r*<S|P57b-;*&4{4Rdct$o7rwJhFy)Cr`65(I1-}r{P@!s|ji9NbQ&0c-_E%`Z
z5`;54qx<AlCEDQ6J3vpC=N~~ZzX5E{F3Bamr1P7#6)Pzbt8aH;1+%xsEoi{48U2Zg
zHL)%>#3pRQDy%&q&{a)XgLT+|%>i2{GfK%>^|Ib?K?JL6sY_6|yJY5FogTczw|q}}
zo%i@Iaxnd5Xv}ywj<cdKvtd!1-JR{7?f7g0`uwX@J$!eO{zD1rqqr5IW+;0o<zrM8
z*6WfBYHH8x66ND<^ulv7`w;t;SNR)61-Host7sinY`_pnINjxkx=@ooaG7Pi7;rNL
zo&zXQ{I$#`P;yi7W5_{EgGpRTBgaLW8*YQr6#Y}%FvU1IN|g=9I_<+EmgVVt4<Yub
z4F*{uO)s#)*`zR_>uuY_A0&(XCgv_&UBB)(qL<M8`z#(7BZ!U6<$0;oBz{xq)A(eZ
zyiT>5$Sgq&p!4|K!|(RC4D^Rv1`BO{xivn&ANR8qa&!OQ_}sRS!R#aGLkAiwmu~X>
zh~B`j?dcBg^=nY|s%<Tf;|QIKRP;7MuIThr{tXz8Jfua<ltZ6LE^~F|A8`l0=ZVJE
z;k9$*4i>77Rc(Z*UeuL7$Eb9-GrjCil4K;)JV~aXJ+Jvv{7%WG;dha--8<zM9AD|I
zy8^x5G;)<N&-!0K*|Yxs(`UVp#qvaFS$cF&15Q+FM7W48GwBEfJ1L7?gc{KoBN06R
z;pvMXEj@5-d;pTm5hRIaDKc#X%smE66B}SdRVf<Rl^a;O7(;HuL7_*|Sf)WL8@hg%
zB6LVgUDN5huj_xfuG`=`?gl3}|D&iL0KMSp!3f7QgGXz)RdQ4jb)V0C=0&Zj5&0{W
Mqu;`AMs(Br541!e2><{9

literal 0
HcmV?d00001

diff --git a/client3.py b/client3.py
index f1771c3..d8a8fbd 100644
--- a/client3.py
+++ b/client3.py
@@ -35,14 +35,15 @@ def getDataPoint(quote):
 	stock = quote['stock']
 	bid_price = float(quote['top_bid']['price'])
 	ask_price = float(quote['top_ask']['price'])
-	price = bid_price
+	price = (bid_price + ask_price) / 2
+
 	return stock, bid_price, ask_price, price
 
 def getRatio(price_a, price_b):
 	""" Get ratio of price_a and price_b """
 	""" ------------- Update this function ------------- """
 	""" Also create some unit tests for this function in client_test.py """
-	return 1
+	return (price_a/price_b)
 
 # Main
 if __name__ == "__main__":
@@ -52,8 +53,11 @@ if __name__ == "__main__":
 		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
 		""" ----------- Update to get the ratio --------------- """
+		prices = {}
+
 		for quote in quotes:
 			stock, bid_price, ask_price, price = getDataPoint(quote)
-			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+			prices[stock] = price
+			print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-		print ("Ratio %s" % getRatio(price, price))
+		print("Ratio %s" % getRatio(prices['ABC'], prices['DEF']))
diff --git a/client_test.py b/client_test.py
index af2bf26..cbc6b21 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,5 +1,6 @@
 import unittest
 from client3 import getDataPoint
+from client3 import *
 
 class ClientTest(unittest.TestCase):
   def test_getDataPoint_calculatePrice(self):
@@ -8,6 +9,8 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+        self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price']+quote['top_ask']['price'])/2), msg='Calculate Price Test Failed!')
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
@@ -15,10 +18,21 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
-
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price']+quote['top_ask']['price'])/2), msg='Calculate Price (with Bid greater than Ask) Test Failed!')
 
   """ ------------ Add more unit tests ------------ """
 
+  def test_getRatio_calculateRatio(self):
+    quotes = [
+      {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+    ]
+    price_a = (quotes[0]['top_bid']['price']+quotes[0]['top_ask']['price'])/2
+    price_b = (quotes[1]['top_bid']['price']+quotes[1]['top_ask']['price'])/2
+    ratio = price_a/price_b
+
+    self.assertEqual(getRatio(((quotes[0]['top_bid']['price']+quotes[0]['top_ask']['price'])/2), ((quotes[1]['top_bid']['price']+quotes[1]['top_ask']['price'])/2)), ratio, msg='Calculate Ratio Test Failed!')
 
 
 if __name__ == '__main__':
-- 
2.17.1

